# StorytellerPi Unified Requirements
# All dependencies in one file with clear sections

# =============================================================================
# CORE DEPENDENCIES (Always Required)
# =============================================================================

# Configuration and Environment
python-dotenv==1.0.0
PyYAML==6.0.1

# Core Python Libraries
numpy==1.24.3
asyncio-mqtt==0.16.1
psutil==5.9.6
watchdog==3.0.0

# Web Interface
Flask==2.3.3
Flask-SocketIO==5.3.6
Werkzeug==2.3.7
Jinja2==3.1.2
MarkupSafe==2.1.3
python-socketio==5.9.0
python-engineio==4.7.1

# Audio Processing
PyAudio==0.2.11
pygame==2.5.2
pydub==0.25.1

# Networking and HTTP
requests==2.31.0
urllib3==1.26.18
certifi==2023.7.22
charset-normalizer==3.3.0
idna==3.4

# =============================================================================
# AI/ML SERVICES (Choose based on your needs)
# =============================================================================

# Google Cloud Services (Primary AI Services)
google-cloud-speech==2.21.0
google-generativeai==0.3.2
google-auth==2.23.4
google-api-core==2.12.0
googleapis-common-protos==1.60.0

# OpenAI Services (Fallback for STT)
openai==1.3.0

# ElevenLabs (Text-to-Speech)
elevenlabs==0.2.26

# gRPC and Protocol Buffers
grpcio==1.59.0
protobuf==4.24.4

# =============================================================================
# WAKE WORD DETECTION (Choose One)
# =============================================================================

# Option 1: OpenWakeWord (Recommended - Free)
openwakeword==0.5.1

# Option 2: Porcupine (Commercial - Uncomment if using)
# pvporcupine==3.0.1

# Option 3: TensorFlow Lite (Uncomment if using custom models)
# tflite-runtime==2.13.0

# =============================================================================
# DEVELOPMENT DEPENDENCIES (Optional - for testing and development)
# =============================================================================

# Testing Framework
# pytest==7.4.3
# pytest-asyncio==0.21.1
# pytest-mock==3.11.1

# Code Quality
# black==23.9.1
# flake8==6.1.0
# isort==5.12.0

# Development Tools
# ipython==8.15.0
# jupyter==1.0.0

# =============================================================================
# SYSTEM AUDIO DEPENDENCIES (Usually installed via system package manager)
# =============================================================================

# These are typically installed via apt/yum, not pip:
# - portaudio19-dev (for PyAudio)
# - libasound2-dev (for ALSA)
# - pulseaudio (for PulseAudio)
# - ffmpeg (for audio processing)
# - espeak (for fallback TTS)

# =============================================================================
# RASPBERRY PI OPTIMIZATIONS
# =============================================================================

# All packages above are available on piwheels.org for faster installation
# The setup script automatically configures pip to use piwheels

# Installation command for production:
# pip install --no-cache-dir --prefer-binary -r requirements.txt

# Installation command for development:
# pip install --no-cache-dir --prefer-binary -r requirements.txt
# pip install pytest pytest-asyncio pytest-mock black flake8

# =============================================================================
# VERSION NOTES
# =============================================================================

# Package versions are pinned for:
# - Stability and reproducibility
# - Faster installation (no dependency resolution)
# - Compatibility with Raspberry Pi ARM architecture
# - Tested combinations that work together

# To update versions:
# 1. Test on development system first
# 2. Update version numbers here
# 3. Test full installation on Raspberry Pi
# 4. Update in production

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# If installation fails:
# 1. Update pip: pip install --upgrade pip
# 2. Install system dependencies: sudo apt install build-essential python3-dev
# 3. Try installing packages individually
# 4. Check piwheels availability: https://www.piwheels.org/

# Memory issues on Pi Zero:
# - Install packages one by one
# - Use --no-cache-dir flag
# - Increase swap space temporarily
# - Consider using minimal installation first